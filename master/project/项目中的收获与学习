11月26日：
  苗龙龙，解决scrollview中嵌套listview而引起的滑动问题
  解决方案： 重写onMeasure方法
  1、重写listview，然后使用该自定义的listview即可
    public class MyListView extends ListView {
      public MyListView(Context context) {
          super(context);
      }

      public MyListView(Context context, AttributeSet attrs) {
          super(context, attrs);
      }

      public MyListView(Context context, AttributeSet attrs, int defStyleAttr) {
          super(context, attrs, defStyleAttr);
      }

      @Override
      protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
          int expandSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE >> 2,
                  MeasureSpec.AT_MOST);
          super.onMeasure(widthMeasureSpec, expandSpec);
      }
    }
 2、使用LinearLayout取代ListView  
   既然ListView不能适应ScrollView，那就换一个可以适应ScrollView的控件，干嘛非要吊死在ListView这一棵树上呢？
   而LinearLayout是最好的选择。但如果我仍想继续使用已经定义好的Adater呢？我们只需要自定义一个类继承自LinearLayout，为其加上对BaseAdapter的适配。
 3、使用单个ListView取代ScrollView中所有内容
    即让前几个item展示为所需的内容，真正listview中的内容在适配器定位时，改变一下position即可。
 4、在解决listview的item和item内部的button点击事件冲突时，发下了一个简便的方法，及其好用： 
  （1）在listview布局文件的根元素上中添加属性android:descendantFocusability="blocksDescendants"
  （2）在Button中添加属性android:focusable="false"和android:clickable="true"
   这样就可以及其方便的实现了item的点击事件和item内部的button点击事件。
11月30日：
  1、在使用listview，adapter的时候，一定要注意要引入正确的布局，listview布局和adapter布局是不同的，注意区分，有时候空指针也代表着你根本就没有获取到布局，因为这个当前布局中根本就没有这样的一个控件，自然就找不到了。
  Attempt to invoke virtual method 'void android.widget.TextView.setText
  2、这段时间一直在使用viewPager来实现界面的切换，从而也出现了一系列的问题，viewPager中包含的fragment，出现了一堆的问题，主要原因还是出现在viewpager加载fragemnt.......
      待补充:
      最后改用FragmentActivity才得以解决，
      （1）fragement的onCreateView方法  public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)
      （2）fragmentActivity的onCreateView方法 public View onCreateView(@NonNull String name, @NonNull final Context context, @NonNull AttributeSet attrs)
      正是由于这个context的原因，所以导致我们在实现fragment中有点击等等事件时，会报错、
  3、在小组项目整合时，将其他人的工程复制过来，记得要在AndroidManifest.xml文件中修改Activity等等的包名。
12月1日：
   1、要深入理解final和static的用法
   final修饰的才是常数，创建后不能修改
   static 静态的，本人理解可以跨类来进行调用。如项目中的登录，登录成功后，可以把该用户所需要的必要信息设置为static，这样这个项目中的其他类就可以直接访问了（相当于一个全局变量）。
   2、这里突然想到，数据库中的用户密码字段不应该直接存储，而是应该通过某种加密的方式。这项工作放在后期测试阶段再进行完善吧。
